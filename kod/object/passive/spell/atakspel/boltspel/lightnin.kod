// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Lightning is BoltSpell

constants:
   include blakston.khd

resources:

   include lightnin.lkod

   lightning_name_rsc = "lightning bolt"
   lightning_icon_rsc = lightnin.bgf
   lightning_look_icon = ilitning.bgf
   lightning_hit_rsc = "Lightning strikes %s%s!"
   lightning_desc_rsc = "Hurls a bolt of lightning at the target."
   lightning_sound = fbolt.ogg

classvars:
   vrName = lightning_name_rsc
   vrIcon = lightning_look_icon
   vrDesc = lightning_desc_rsc
   vrProjectile_icon = lightning_icon_rsc

   viSpell_num = SID_LIGHTNING_BOLT

   viSpell_type = SPL_TYPE_ALL+SPL_TYPE_SHOCK

   viMana = 10
   viSchool = SS_FAREN
   viSpell_level = 5

   viChance_To_Increase = 15
   viMeditate_ratio = 50

   vrSucceed_wav = lightning_sound

   viPostCast_time = 2        // in seconds, since it works off gettime()

   // Projectile lighting information.
   viProjectileLightFlags = LIGHT_FLAG_ON | LIGHT_FLAG_DYNAMIC
   // Medium light range, out of 255.
   viProjectileLightIntensity = 100
   // Color is lightning.
   viProjectileLightColor = LIGHT_LIGHTNING

properties:

   piDamageMin = 13
   piDamageMax = 18
   prSpellHit = lightning_hit_rsc
   plBoltflashes = $
   plBoltTimers = $
   ptBoltTimer = $
   poNewBolt = $

messages:


   ResetReagents()
   {
      // separate message so can change, then set from admin mode

      plReagents = $;
      plReagents = Cons([&BlueMushroom,2],plReagents);

      return;
   }

   GetProjectileSpeed()
   {
      return 12;
   }

   SendProjectileAnimation()
   {
      //AddPacket(1, ANIMATE_CYCLE, 4, 40, 2, 2, 2, 3);   // 40ms between animations
      AddPacket(1, ANIMATE_NONE, 2,1);   // 40ms between animations

      return;
   }


   DoSpellEffects(what=$,who=$, lTargets=$, state=$,iSpellPower=$,iPowerLevel=100,
             bItemCast=FALSE, bRing=FALSE, bStun=FALSE,report=TRUE, iDamage=$)
   {
      local oTargeted, oRoom, poNewBolt, oElement;

   oTargeted = First(lTargets);
   oRoom = Send(oTargeted,@GetOwner);

               poNewBolt = Create(&Boltflash,#seed=[oTargeted,1,500,0,0,0,0,0,0]);
               Send(oRoom,@NewHold,#what=poNewBolt,#new_row=Send(oTargeted,@GetRow),#new_col=Send(oTargeted,@GetCol),
               #fine_row=Send(oTargeted,@GetFineRow),#fine_col=Send(oTargeted,@GetFineCol));
   
   Send(oRoom,@SomethingWaveRoom,#what=poNewBolt,#wave_rsc=vrSucceed_wav);
   
   propagate;
   }
   
   Delete()
   {
      propagate;
   }
//overrides bolt projectile
   GetProjectileIcon()
   {
      return FALSE;
   }

   GetProjectileLightFlags()
   {
      return FALSE;
   }

   GetProjectileLightIntensity()
   {
      return FALSE;
   }

   GetProjectileLightColor()
   {
      return FALSE;
   }



end

////////////////////////////////////////////////////////////////////////////////

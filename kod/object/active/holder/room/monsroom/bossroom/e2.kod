// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
OutdoorsE2 is BossRoom

constants:

   include blakston.khd

resources:

   include e2.lkod

   room_name_OutdoorsE2 = "The Great Ocean"
   room_OutdoorsE2 = e2.roo
   OutdoorsE2_music = fight.ogg

   E2_oceanwalk = \
      "You decide you don't like saltwater enough to go swimming "
      "in the Great Ocean."
   E2_icewalk = "The ice looks a bit too thin to risk going any farther out."

classvars:

   vrName = room_name_OutdoorsE2

   viTeleport_row = 19
   viTeleport_col = 32

   viTerrain_type = TERRAIN_NECROPOLIS | TERRAIN_LAIR

   viFlag_row = 63
   viFlag_col = 5

   viWeatherZone = WEATHER_ZONE_CV

   viBossResetTime = 1000 * 60 * 60 * 6

properties:

   prRoom = room_OutdoorsE2
   prMusic = OutdoorsE2_music
   piRoom_num = RID_E2

   piBaseLight = LIGHT_VERY_DARK
   piOutside_factor = 0

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   piGen_time = 20000
   piGen_percent = 70

   piInit_count_min = 3
   piInit_count_max = 5

   piMonster_count_max = 10

   pbRespawnMonsters = TRUE

messages:

   Constructor()
   {
      plMonsters = [ [&Necromancer, 50], [&DarkAngel, 25], [&Ghost, 25] ];

      propagate;
   }

   CreateStandardExits()
   {
      plEdge_Exits = $;
      plEdge_Exits = Cons([LEAVE_EAST, RID_F2, 21, 3, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_SOUTH, RID_D4, 1, 23, ROTATE_NONE], plEdge_exits);

      propagate;
   }

   LastUserLeft()
   {
      local i, oBoss, oMob, oSpell, iRow, iCol, iIndex;

      Send(self,@Teleport,#what=First(plBoss));

      while plHenchmen <> $
      {
         Post(First(plHenchmen),@Delete);
         plHenchmen = Rest(plHenchmen);
      }

      iIndex = Length(plGenerators);
      foreach i in plHenchmenTemplate
      {
         oMob = Create(First(i));
         iRow = Nth(i,2);
         iCol = Nth(i,3);
         ++iIndex;
         Send(self,@NewHold,#what=oMob,#new_row=iRow,#new_col=iCol);
         Send(oMob,@SetMaster,#oMaster=First(plBoss));
         Send(oMob,@SetSpawnLoc,#iRow=iRow,#iCol=iCol,#iIndex=iIndex);
         plHenchmen = Cons(oMob, plHenchmen);
      }
   
      propagate;
   }

   SetupBossTemplates()
   {
      plBossTemplate = [ 
         [&Lich,        viTeleport_row, viTeleport_col] 
      ];

      plHenchmenTemplate = [
         [&Ghost,       viTeleport_row + 1, viTeleport_col + 1],
         [&DarkAngel,   viTeleport_row + 2, viTeleport_col + 2], 
         [&Necromancer, viTeleport_row + 3, viTeleport_col + 3]
      ];

      return;
   }

   SetMonsterGenPoints()
   {
      plGenerators = [ [40, 6], [45, 13], [58, 28], [34, 34], [32, 53],
                       [53, 50], [40, 67], [14, 66], [15, 46], [4, 68] ];

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
